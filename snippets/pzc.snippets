# Program
snippet pr
	PROGRAM ${1}()
	{
		${2}
		WRITELN(result);
	}
# If Condition
snippet if
	if (${1:/* condition */})
	{
		${2:/* code */}
	}
snippet el
	else
	{
		${1}
	}
# Ternary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# Do While Loop
snippet do
	do
	{
		${2:/* code */}
	} while (${1:/* condition */});
# While Loop
snippet wh
	while (${1:/* condition */})
	{
		${2:/* code */}
	}
# For Loop
snippet for
	FOR (${1:i}, 1 TO ${2:n})
	{
		${3:/* code */}
	}
snippet FOR
	FOR (${1:i}, 1 TO ${2:n})
	{
		${3:/* code */}
	}
# Custom For Loop
snippet forr
	FOR (${1:i}, 1 TO ${2:n} STEP ${3})
	{
		${4:/* code */}
	}
snippet FORR
	FOR (${1:i}, 1 TO ${2:n} STEP ${3})
	{
		${4:/* code */}
	}
# Function
snippet fun
	FUNCTION ${1:function_name}(${2})
	{
		${3:/* code */}
	}
# Typedef
snippet td
	typedef ${1:int} ${2:MyCustomType};${3}
# Struct
snippet st
	struct ${1:`Filename('$1_t', 'name')`} {
		${2:/* data */}
	}${3: /* optional variable list */};${4}
# Typedef struct
snippet tds
	typedef struct ${2:_$1 }{
		${3:/* data */}
	} ${1:`Filename('$1_t', 'name')`};
# Typdef enum
snippet tde
	typedef enum {
		${1:/* data */}
	} ${2:foo};
# Read-write
snippet wr
	WRITELN(${1});
snippet wrsp
	WRITESPLN(${1});
snippet rint
	READ_INT();
snippet rreal
	READ_REAL();
# This is kind of convenient
snippet .
	[${1}]${2}
